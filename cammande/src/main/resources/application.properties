spring.application.name=cammandes
graphql.tools.schema-location-pattern=classpath:graphql/**/*.graphqls
graphql.servlet.mapping=/graphql
graphql.altair.enabled=true
graphql.altair.mapping=/altair

# Kafka bootstrap server
spring.kafka.bootstrap-servers=localhost:9092

# Kafka producer configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Kafka consumer configuration (si nécessaire)
spring.kafka.consumer.group-id=commande-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.graphql.schema.printer.enabled=true
spring.graphql.graphiql.enabled=true

server.port=8082

# Configuration du Circuit Breaker
resilience4j.circuitbreaker.instances.commande-service.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.commande-service.slow-call-rate-threshold=50
resilience4j.circuitbreaker.instances.commande-service.slow-call-duration-threshold=2000
resilience4j.circuitbreaker.instances.commande-service.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.commande-service.sliding-window-size=10
resilience4j.circuitbreaker.instances.commande-service.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.commande-service.wait-duration-in-open-state=5000
